# Generated by Django 5.2.4 on 2025-07-31 17:23

from django.db import migrations
from datetime import date, timedelta


def create_initial_campaign_data(apps, schema_editor):
    """
    Create initial campaign data
    """
    Campaign = apps.get_model('campaigns', 'Campaign')
    User = apps.get_model('accounts', 'User')

    # Get or create a default admin user for campaign creation
    admin_user = User.objects.filter(is_superuser=True).first()
    if not admin_user:
        # If no admin user exists yet, create a temporary one
        admin_user = User.objects.create_user(
            username='temp_admin',
            email='temp@example.com',
            password='temp_password',
            is_staff=True,
            is_superuser=True
        )

    # Create default campaign if it doesn't exist
    if not Campaign.objects.exists():
        campaign = Campaign.objects.create(
            name='TIKO Health Campaign 2025',
            description='Community health screening and medical services campaign',
            start_date=date.today(),
            end_date=date.today() + timedelta(days=365),
            health_area='General Health Screening',
            consent_text='I consent to participate in this health screening campaign and allow the collection and use of my health data for medical purposes.',
            status='active',
            created_by=admin_user
        )
        print(f"Created campaign: {campaign.name}")
    else:
        print("Campaign data already exists, skipping creation")


def reverse_create_initial_campaign_data(apps, schema_editor):
    """
    Remove initial campaign data (for migration rollback)
    """
    Campaign = apps.get_model('campaigns', 'Campaign')
    User = apps.get_model('accounts', 'User')

    # Remove default campaign
    Campaign.objects.filter(name='TIKO Health Campaign 2025').delete()

    # Remove temporary admin user if it exists
    User.objects.filter(username='temp_admin').delete()

    print("Removed initial campaign data")


class Migration(migrations.Migration):

    dependencies = [
        ("campaigns", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_initial_campaign_data, reverse_create_initial_campaign_data),
    ]
