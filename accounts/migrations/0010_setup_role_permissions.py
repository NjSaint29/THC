# Generated by Django 5.2.4 on 2025-07-31 22:52

from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType


def setup_role_permissions(apps, schema_editor):
    """
    Set up comprehensive role-based permissions for all user groups
    """
    # Define groups and their permissions
    groups_permissions = {
        'Registration Clerks': [
            # Patient permissions (including custom permission)
            'add_patient',
            'change_patient',
            'view_patient',
            'can_register_patients',  # Custom permission for patient registration
            # Limited consultation view for patient lookup
            'view_consultation',
        ],

        'Vitals Clerks': [
            # Patient permissions for vitals
            'view_patient',
            'change_patient',  # For updating vitals
            # Clinical parameters permissions
            'add_clinicalparameters',
            'change_clinicalparameters',
            'view_clinicalparameters',
            # Consultation permissions for vitals entry
            'view_consultation',
            'change_consultation',  # For updating vitals in consultation
        ],

        'Doctors': [
            # Full patient access
            'view_patient',
            'change_patient',
            # Clinical parameters access
            'view_clinicalparameters',
            # Full consultation access (including custom permissions)
            'add_consultation',
            'change_consultation',
            'view_consultation',
            'delete_consultation',
            'can_conduct_consultations',  # Custom permission
            'can_view_consultation_reports',  # Custom permission
            # Lab order permissions
            'add_laborder',
            'change_laborder',
            'view_laborder',
            'delete_laborder',
            # Lab result viewing
            'view_labresult',
            'can_view_lab_reports',  # Custom permission
            # Prescription permissions
            'add_prescription',
            'change_prescription',
            'view_prescription',
            'delete_prescription',
        ],

        'Lab Technicians': [
            # Patient viewing for lab work
            'view_patient',
            # Clinical parameters viewing
            'view_clinicalparameters',
            # Lab order viewing
            'view_laborder',
            'change_laborder',  # For updating status
            # Lab result management (including custom permissions)
            'add_labresult',
            'change_labresult',
            'view_labresult',
            'delete_labresult',
            'can_enter_lab_results',  # Custom permission
            'can_verify_lab_results',  # Custom permission
            'can_view_lab_reports',  # Custom permission
            # Consultation viewing for context
            'view_consultation',
        ],

        'Pharmacy Clerks': [
            # Patient viewing
            'view_patient',
            # Consultation viewing for prescriptions
            'view_consultation',
            'change_consultation',  # For updating prescription status
            # Prescription management (including custom permissions)
            'view_prescription',
            'change_prescription',  # For updating dispensing status
            'can_dispense_medications',  # Custom permission
        ],

        'Campaign Managers': [
            # Campaign management (including custom permissions)
            'add_campaign',
            'change_campaign',
            'view_campaign',
            'delete_campaign',
            'can_manage_campaigns',  # Custom permission
            'can_view_campaign_reports',  # Custom permission
            # Patient overview
            'view_patient',
            'view_clinicalparameters',
            # Consultation overview
            'view_consultation',
            'can_view_consultation_reports',  # Custom permission
            # Lab overview
            'view_laborder',
            'view_labresult',
            'can_view_lab_reports',  # Custom permission
            # Prescription overview
            'view_prescription',
        ],

        'Data Analysts': [
            # Read-only access to all data for reporting (including custom permissions)
            'view_patient',
            'can_view_patient_reports',  # Custom permission
            'view_clinicalparameters',
            'view_consultation',
            'can_view_consultation_reports',  # Custom permission
            'view_laborder',
            'view_labresult',
            'can_view_lab_reports',  # Custom permission
            'view_prescription',
            'view_campaign',
            'can_view_campaign_reports',  # Custom permission
        ],

        'Administrators': [
            # Full access to everything (including all custom permissions)
            'add_user', 'change_user', 'view_user', 'delete_user',
            'add_patient', 'change_patient', 'view_patient', 'delete_patient', 'can_register_patients', 'can_view_patient_reports',
            'add_clinicalparameters', 'change_clinicalparameters', 'view_clinicalparameters', 'delete_clinicalparameters',
            'add_consultation', 'change_consultation', 'view_consultation', 'delete_consultation', 'can_conduct_consultations', 'can_view_consultation_reports',
            'add_laborder', 'change_laborder', 'view_laborder', 'delete_laborder',
            'add_labresult', 'change_labresult', 'view_labresult', 'delete_labresult', 'can_enter_lab_results', 'can_verify_lab_results', 'can_view_lab_reports',
            'add_prescription', 'change_prescription', 'view_prescription', 'delete_prescription', 'can_dispense_medications',
            'add_campaign', 'change_campaign', 'view_campaign', 'delete_campaign', 'can_manage_campaigns', 'can_view_campaign_reports',
        ],
    }

    # Create groups and assign permissions
    for group_name, permission_codenames in groups_permissions.items():
        group, created = Group.objects.get_or_create(name=group_name)
        if created:
            print(f"Created group: {group_name}")

        # Clear existing permissions
        group.permissions.clear()

        # Add permissions to group
        for codename in permission_codenames:
            try:
                permission = Permission.objects.get(codename=codename)
                group.permissions.add(permission)
                print(f"Added permission {codename} to {group_name}")
            except Permission.DoesNotExist:
                print(f"Warning: Permission {codename} not found")

        group.save()

    print("Role-based permissions setup completed")


def reverse_setup_role_permissions(apps, schema_editor):
    """
    Remove the role-based permission setup
    """
    group_names = [
        'Registration Clerks',
        'Vitals Clerks',
        'Doctors',
        'Lab Technicians',
        'Pharmacy Clerks',
        'Campaign Managers',
        'Data Analysts',
        'Administrators',
    ]

    for group_name in group_names:
        try:
            group = Group.objects.get(name=group_name)
            group.permissions.clear()
            print(f"Cleared permissions for group: {group_name}")
        except Group.DoesNotExist:
            print(f"Group {group_name} not found")


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0009_import_sqlite_data"),
        ("patients", "0001_initial"),
        ("consultations", "0007_alter_laborder_lab_status"),
        ("laboratory", "0002_auto_20250731_1834"),
        ("campaigns", "0002_auto_20250731_1823"),
    ]

    operations = [
        migrations.RunPython(setup_role_permissions, reverse_setup_role_permissions),
    ]
