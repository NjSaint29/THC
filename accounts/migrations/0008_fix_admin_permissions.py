# Generated by Django 5.2.4 on 2025-07-31 22:15

from django.db import migrations
from django.contrib.auth.models import Group
from django.contrib.auth import get_user_model


def fix_admin_user_permissions(apps, schema_editor):
    """
    Ensure admin user has correct role and group assignment
    """
    User = get_user_model()

    try:
        # Get the admin user
        admin_user = User.objects.get(username='admin')

        # Ensure admin user has correct role
        if admin_user.role != 'admin':
            admin_user.role = 'admin'
            admin_user.save()
            print(f"Updated admin user role to 'admin'")

        # Ensure admin user is in Administrators group
        admin_group, created = Group.objects.get_or_create(name='Administrators')
        if not admin_user.groups.filter(name='Administrators').exists():
            admin_user.groups.add(admin_group)
            print(f"Added admin user to Administrators group")

        # Ensure admin user has staff and superuser status
        updated = False
        if not admin_user.is_staff:
            admin_user.is_staff = True
            updated = True
        if not admin_user.is_superuser:
            admin_user.is_superuser = True
            updated = True

        if updated:
            admin_user.save()
            print(f"Updated admin user staff/superuser status")

        # Verify permissions
        if admin_user.has_perm('patients.can_register_patients'):
            print(f"Admin user has can_register_patients permission: ✓")
        else:
            print(f"Admin user missing can_register_patients permission: ✗")

        print(f"Admin user permissions fixed successfully")

    except User.DoesNotExist:
        print("Admin user not found")
    except Exception as e:
        print(f"Error fixing admin user permissions: {str(e)}")


def reverse_fix_admin_user_permissions(apps, schema_editor):
    """
    Reverse the admin user permission fixes
    """
    print("Reversing admin user permission fixes")


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0007_assign_admin_to_group"),
    ]

    operations = [
        migrations.RunPython(fix_admin_user_permissions, reverse_fix_admin_user_permissions),
    ]
