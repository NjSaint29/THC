# Generated by Django 5.2.4 on 2025-07-31 17:34

from django.db import migrations


def create_initial_lab_tests(apps, schema_editor):
    """
    Create initial lab test formulary
    """
    LabTest = apps.get_model('campaigns', 'LabTest')

    # Check if lab tests already exist
    if not LabTest.objects.exists():
        lab_tests_data = [
            # Hematology Tests
            {
                'code': 'CBC',
                'name': 'Complete Blood Count',
                'category': 'hematology',
                'description': 'Complete blood count with differential',
                'specimen_type': 'blood',
                'normal_range': 'See individual components',
                'unit': '',
                'is_active': True
            },
            {
                'code': 'HGB',
                'name': 'Hemoglobin',
                'category': 'hematology',
                'description': 'Hemoglobin concentration',
                'specimen_type': 'blood',
                'normal_range': 'M: 13.5-17.5 g/dL, F: 12.0-15.5 g/dL',
                'unit': 'g/dL',
                'is_active': True
            },
            {
                'code': 'HCT',
                'name': 'Hematocrit',
                'category': 'hematology',
                'description': 'Hematocrit percentage',
                'specimen_type': 'blood',
                'normal_range': 'M: 41-50%, F: 36-44%',
                'unit': '%',
                'is_active': True
            },

            # Chemistry Tests
            {
                'code': 'GLU',
                'name': 'Glucose (Fasting)',
                'category': 'chemistry',
                'description': 'Fasting blood glucose',
                'specimen_type': 'blood',
                'normal_range': '70-100 mg/dL',
                'unit': 'mg/dL',
                'is_active': True
            },
            {
                'code': 'CHOL',
                'name': 'Total Cholesterol',
                'category': 'chemistry',
                'description': 'Total cholesterol level',
                'specimen_type': 'blood',
                'normal_range': '<200 mg/dL',
                'unit': 'mg/dL',
                'is_active': True
            },
            {
                'code': 'CREA',
                'name': 'Creatinine',
                'category': 'chemistry',
                'description': 'Serum creatinine',
                'specimen_type': 'blood',
                'normal_range': 'M: 0.7-1.3 mg/dL, F: 0.6-1.1 mg/dL',
                'unit': 'mg/dL',
                'is_active': True
            },

            # Liver Function Tests
            {
                'code': 'ALT',
                'name': 'ALT (SGPT)',
                'category': 'chemistry',
                'description': 'Alanine aminotransferase',
                'specimen_type': 'blood',
                'normal_range': '7-56 U/L',
                'unit': 'U/L',
                'is_active': True
            },
            {
                'code': 'AST',
                'name': 'AST (SGOT)',
                'category': 'chemistry',
                'description': 'Aspartate aminotransferase',
                'specimen_type': 'blood',
                'normal_range': '10-40 U/L',
                'unit': 'U/L',
                'is_active': True
            },

            # Microbiology Tests
            {
                'code': 'URINE',
                'name': 'Urinalysis',
                'category': 'microbiology',
                'description': 'Complete urinalysis',
                'specimen_type': 'urine',
                'normal_range': 'See individual components',
                'unit': '',
                'is_active': True
            },
            {
                'code': 'STOOL',
                'name': 'Stool Examination',
                'category': 'microbiology',
                'description': 'Stool microscopy and culture',
                'specimen_type': 'stool',
                'normal_range': 'No parasites, normal flora',
                'unit': '',
                'is_active': True
            },

            # Rapid Tests
            {
                'code': 'MALARIA',
                'name': 'Malaria Rapid Test',
                'category': 'serology',
                'description': 'Rapid malaria antigen test',
                'specimen_type': 'blood',
                'normal_range': 'Negative',
                'unit': '',
                'is_active': True
            },
            {
                'code': 'HIV',
                'name': 'HIV Rapid Test',
                'category': 'serology',
                'description': 'HIV antibody rapid test',
                'specimen_type': 'blood',
                'normal_range': 'Non-reactive',
                'unit': '',
                'is_active': True
            }
        ]

        for test_data in lab_tests_data:
            lab_test = LabTest.objects.create(**test_data)
            print(f"Created lab test: {lab_test.name}")

        print(f"Created {len(lab_tests_data)} lab tests")
    else:
        print("Lab tests already exist, skipping creation")


def reverse_create_initial_lab_tests(apps, schema_editor):
    """
    Remove initial lab tests (for migration rollback)
    """
    LabTest = apps.get_model('campaigns', 'LabTest')

    # Remove all lab tests created by this migration
    test_codes = ['CBC', 'HGB', 'HCT', 'GLU', 'CHOL', 'CREA', 'ALT', 'AST', 'URINE', 'STOOL', 'MALARIA', 'HIV']
    LabTest.objects.filter(code__in=test_codes).delete()
    print("Removed initial lab tests")


class Migration(migrations.Migration):

    dependencies = [
        ("laboratory", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_initial_lab_tests, reverse_create_initial_lab_tests),
    ]
