# Generated by Django 5.2.4 on 2025-07-15 14:25

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("campaigns", "0001_initial"),
        ("consultations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LabResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "result_value",
                    models.TextField(help_text="The actual test result value"),
                ),
                (
                    "result_unit",
                    models.CharField(
                        blank=True,
                        help_text="Unit of measurement for the result",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "reference_range",
                    models.CharField(
                        blank=True,
                        help_text="Normal reference range for this test",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "interpretation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("normal", "Normal"),
                            ("abnormal_low", "Abnormal - Low"),
                            ("abnormal_high", "Abnormal - High"),
                            ("critical_low", "Critical - Low"),
                            ("critical_high", "Critical - High"),
                            ("inconclusive", "Inconclusive"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "technician_notes",
                    models.TextField(
                        blank=True,
                        help_text="Technical notes about the test procedure or sample",
                        null=True,
                    ),
                ),
                (
                    "clinical_conclusion",
                    models.TextField(
                        blank=True,
                        help_text="Clinical interpretation and conclusion",
                        null=True,
                    ),
                ),
                (
                    "sample_quality",
                    models.CharField(
                        choices=[
                            ("good", "Good"),
                            ("acceptable", "Acceptable"),
                            ("poor", "Poor - Repeat Required"),
                            ("hemolyzed", "Hemolyzed"),
                            ("clotted", "Clotted"),
                            ("insufficient", "Insufficient Sample"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                (
                    "test_method",
                    models.CharField(
                        blank=True,
                        help_text="Method or equipment used for testing",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "is_critical",
                    models.BooleanField(
                        default=False,
                        help_text="Mark if result requires immediate attention",
                    ),
                ),
                (
                    "critical_notified",
                    models.BooleanField(
                        default=False,
                        help_text="Mark if critical result has been communicated",
                    ),
                ),
                (
                    "critical_notified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When critical result was communicated",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("verified", "Verified"),
                            ("reported", "Reported"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "result_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "lab_order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result",
                        to="consultations.laborder",
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_results",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Lab supervisor who verified the result",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_lab_results",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-result_date"],
                "permissions": [
                    ("can_enter_lab_results", "Can enter laboratory results"),
                    ("can_verify_lab_results", "Can verify laboratory results"),
                    ("can_view_lab_reports", "Can view laboratory reports"),
                ],
            },
        ),
        migrations.CreateModel(
            name="LabWorksheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("worksheet_number", models.CharField(max_length=50, unique=True)),
                ("created_date", models.DateField(default=django.utils.timezone.now)),
                ("run_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("reviewed", "Reviewed"),
                        ],
                        default="created",
                        max_length=20,
                    ),
                ),
                (
                    "control_results",
                    models.TextField(
                        blank=True,
                        help_text="Quality control results for this batch",
                        null=True,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "technician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "test_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="campaigns.labtest",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LabOrderWorksheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.PositiveIntegerField(
                        help_text="Position of sample in the worksheet"
                    ),
                ),
                (
                    "lab_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="worksheets",
                        to="consultations.laborder",
                    ),
                ),
                (
                    "worksheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_orders",
                        to="laboratory.labworksheet",
                    ),
                ),
            ],
            options={
                "ordering": ["position"],
                "unique_together": {("lab_order", "worksheet")},
            },
        ),
    ]
