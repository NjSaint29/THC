# Generated by Django 5.2.4 on 2025-07-15 13:50

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("campaigns", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "patient_id",
                    models.CharField(
                        editable=False,
                        help_text="Auto-generated unique patient ID (e.g., TIKO-2025-0001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "age",
                    models.PositiveIntegerField(
                        help_text="Age in years",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(150),
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "marital_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("single", "Single"),
                            ("married", "Married"),
                            ("divorced", "Divorced"),
                            ("widowed", "Widowed"),
                            ("separated", "Separated"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("health_area", models.CharField(max_length=200)),
                ("consent_given", models.BooleanField(default=False)),
                ("consent_date", models.DateTimeField(blank=True, null=True)),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("registered", "Registered"),
                            ("vitals_taken", "Vitals Taken"),
                            ("consultation_done", "Consultation Done"),
                            ("lab_ordered", "Lab Tests Ordered"),
                            ("lab_completed", "Lab Tests Completed"),
                            ("treatment_completed", "Treatment Completed"),
                            ("discharged", "Discharged"),
                        ],
                        default="registered",
                        max_length=20,
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patients",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "registered_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registered_patients",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-registration_date"],
                "permissions": [
                    ("can_register_patients", "Can register patients"),
                    ("can_view_patient_reports", "Can view patient reports"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ClinicalParameters",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Weight in kg",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Height in cm",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Temperature in Celsius",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "systolic_bp",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Systolic blood pressure (mmHg)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(50),
                            django.core.validators.MaxValueValidator(300),
                        ],
                    ),
                ),
                (
                    "diastolic_bp",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Diastolic blood pressure (mmHg)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(30),
                            django.core.validators.MaxValueValidator(200),
                        ],
                    ),
                ),
                (
                    "heart_rate",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Heart rate (beats per minute)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(30),
                            django.core.validators.MaxValueValidator(250),
                        ],
                    ),
                ),
                (
                    "glucose_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("fbs", "Fasting Blood Sugar"),
                            ("rbs", "Random Blood Sugar"),
                            ("pp", "Post Prandial"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "blood_glucose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Blood glucose level (mg/dL)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "lmp",
                    models.DateField(
                        blank=True, help_text="Last Menstrual Period", null=True
                    ),
                ),
                ("is_pregnant", models.BooleanField(default=False)),
                (
                    "gestational_age",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Gestational age in weeks",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(42),
                        ],
                    ),
                ),
                (
                    "age_at_first_pregnancy",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Age at first pregnancy",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(10),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("recorded_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "recorded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recorded_vitals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clinical_parameters",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Clinical Parameters",
                "verbose_name_plural": "Clinical Parameters",
            },
        ),
    ]
